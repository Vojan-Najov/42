________________________________________________________________________________
	notes by ccartman
________________________________________________________________________________


	BORN2beROOT

________________________________________________________________________________

	LINUX
 
 Linux — это ядро Unix-подобной операционной системы. Исходно оно
 разрабатывалось для машин с процессорами 386 (и более новых), а сейчас может
 работать и на десятке других архитектур. Ядро Linux было написано Линусом
 Торвальдсом (Linus Torvalds) и многими компьютерщиками со всего мира.

Кроме ядра, в «Linux»-систему обычно входит:
• файловая система, соответствующая стандарту иерархии файловой системы Linux
(Linux Filesystem Hierarchy Standard).
• разнообразные Unix-утилиты, многие из которых были разработаны проектом GNU и
Free Software Foundation.

Ядро Linux, файловая система, утилиты GNU, FSF и другие разрабатываются
в соответствии со стандартом POSIX (IEEE 1003.1), см. Раздел 4.4.

________________________________________________________________________________

	DEBIAN

Debian GNU/Linux — это один из дистрибутивов операционной системы Linux с 
большим количеством пакетов.

Debian GNU/Linux:
• самодостаточен: сейчас в Debian входит более 58000 пакетов программ.
Пользователи могут выбирать нужные пакеты для установки; для этого в Debian
есть специальный инструмент.
• свободен для использования и дальнейшего распространения: для участия в его
распространении и разработке не требуется членства или оплаты.
Все пакеты, которые формально являются частью Debian GNU/Linux, свободны для
дальнейшего распространения обычно на условиях универсальной общественной
лицензии GNU (GNU General Public License).
В FTP-архивах Debian содержится ещё приблизительно 930 пакетов программ
(в разделах non-free и contrib), которые распространяются на специальных
условиях, определённых в каждом пакете.
• динамичен: благодаря усилиям примерно 1343 добровольцев, постоянно работающих
над улучшением существующего и над добавлением нового кода, Debian быстро
развивается.
FTP-архивы обновляются дважды в день.

Проект Debian был создан Иэном Мёрдоком (Ian Murdock) в 1993 году при
спонсорском участии проекта GNU Free Software Foundation.

________________________________________________________________________________

	ВЕРСИИ DEBIAN

В настоящее время существует три версии Debian GNU/Linux:

	1. выпуск 10, также известен как «стабильный (stable)» дистрибутив или
buster Это стабильное и хорошо протестированное ПО, которое изменяется,
если в него включаются существенные исправления, касающиеся безопасности или
удобства использования.
	2. «тестируемый» (testing) дистрибутив, в настоящий момент называется
bullseye. Он включает пакеты, которые войдут в следующую «стабильную» версию;
эти пакеты прошли некоторое тестирование в нестабильной версии, но для выпуска
пока не готовы. Данная версия обновляется намного чаще, чем «стабильная», но не
 так часто, как «нестабильная».
	3. нестабильный дистрибутив Это разрабатываемая версия дистрибутива, она
непрерывно обновляется. Вы можете получить пакеты из архива «нестабильной»
версии с любого FTP-сервера Debian и использовать их для обновления своей
системы в любое время, но не ждите, что система останется стабильной как
прежде — эта версия всё же называется «нестабильной»!

________________________________________________________________________________

	Обновляются ли пакеты в «stable»?

В стабильный выпуск новые возможности не добавляются. После того как версия
Debian была выпущена и помечена как «стабильная», в неё поступают только
обновления безопасности. То есть обновления получат только те пакеты, в которых
была найдена какая-то уязвимость. Все обновления безопасности поступают с
security.debian.org (ftp://security.debian.org).
Обновления безопасности служат одной цели: исправить уязвимость. Это не
какой-то хитрый способ протащить изменения в стабильный выпуск в обход обычной
процедуры выпуска. Поэтому исправление проблем безопасности в пакетах не
приводит к обновлению ПО. Команда безопасности Debian переносит изменения для
исправления уязвимости именно в ту версию, которая входит в «стабильный» выпуск.

________________________________________________________________________________

	У меня на настольном компьютере/кластере установлен Debian. Как
	узнать, какой дистрибутив используется?

В большинстве случаев это очень легко сделать. Посмотрите файл
/etc/apt/sources.list.

Там будет строка, подобная этой:
deb http://ftp.us.debian.org/debian/ unstable main contrib
Третье поле («unstable» в вышеприведённом примере) указывает на отслеживаемый
дистрибутив Debian, установленный в системе.

Также вы можете использовать команду lsb_release (из пакета lsb-release).
Если вы запустите эту программу на компьютере с нестабильной системой,
то получите:

$ lsb_release -a
LSB Version: core-2.0-noarch:core-3.0-noarch:core-3.1-noarch:core-2.0-ia32: ←-
	core-3.0-ia32:core-3.1-ia32
Distributor ID: Debian
Description: Debian GNU/Linux unstable (sid)
Release: unstable
Codename: sid

Однако, это не всегда так легко. В некоторых системах могут быть файлы
sources.list с несколькими строками, указывающими на различные дистрибутивы.
Так бывает, когда администратор следит за различными пакетами из различных
дистрибутивов Debian. Это часто называется apt-pinning. На таких компьютерах
может использоваться смесь дистрибутивов.

________________________________________________________________________________

	Как установить не-Debian программу?

Файлы в каталоге /usr/local/ не контролируются системой управления пакетами
Debian. Поэтому хорошим вариантом будет размещение исходного кода нужных вам
программ в каталоге /usr/local/src/. Например, файлы из пакета «foo.tar» можно
распаковать в каталог /usr/local/src/foo. После сборки поместите двоичные файлы
в /usr/local/bin/, библиотеки в /usr/local/lib/, а файлы настроек
в /usr/local/etc/.
Если ваша программа и/или файлы на самом деле должны находиться в каком-то
другом каталоге, их всё равно можно сохранить в /usr/local/, а в нужных местах
создать соответствующие символьные ссылки на файлы из /usr/local/. Можно,
например, сделать так:
ln -s /usr/local/bin/foo /usr/bin/foo


________________________________________________________________________________

	Программное обеспечение,доступное в системе Debian

________________________________________________________________________________

	Какие виды приложений и средств разработки программ
	доступны в Debian GNU/Linux?

Как и многие другие дистрибутивы Linux, Debian GNU/Linux предоставляет:

• основные приложения GNU для разработки программного обеспечения, работы с
файлами и обработки текста, включая gcc, g++, make, texinfo, Emacs, оболочку
Bash и множество усовершенствованных утилит Unix;
• Perl, Python, Tcl/Tk и множество программ, модулей и библиотек для этих
языков;
• TeX (LaTeX) и Lyx, dvips, Ghostscript;
• оконную систему Xorg, предоставляющую сетевой графический пользовательский
интерфейс в Linux, и несметное количество X-приложений, в том числе окружения
рабочих столов GNOME, KDE и Xfce;
• полный набор сетевых приложений, включая серверы для интернет-протоколов,
таких как HTTP (WWW), FTP, NNTP (новости), SMTP и POP (почта) и DNS (серверы
имен); реляционные базы данных, такие как PostgreSQL, MySQL; также
предоставляются веб-браузеры, включая различные продукты Mozilla;
• полный набор офисных приложений, включая набор для повышения
производительности LibreOffice, электронные таблицы Gnumeric и другие,
редакторы WYSIWYG, календари.

Более 57200 пакетов, начиная от серверов новостей и ридеров и заканчивая
поддержкой звука, программами факсимильной связи, программы для баз данных и
электронных таблиц, программы обработки изображений, коммуникации, сетевые и
почтовые утилиты.
В дистрибутив включены веб-серверы и даже программы радиолюбителей. Другие 930
комплектов программного обеспечения доступны в виде пакетов Debian, но
формально не являются частью Debian из-за лицензионных ограничений.

________________________________________________________________________________

	Кто написал все эти программы?

Авторы программ, входящих в каждый из пакетов, указаны в соответствующих файлах
/usr/share/doc/ПАКЕТ/copyright,
где вместо ПАКЕТ нужно подставить имя пакета.

________________________________________________________________________________

	Как получить текущий список программ, для которых в
	Debian собраны пакеты?

Полный список доступен на любом из зеркал Debian
(https://www.debian.org/distrib/ftplist), в файле indices/Maintainers. Этот
файл содержит имена пакетов и имена, а также адреса
электронной почты соответствующих сопровождающих.

Веб-интерфейс для пакетов Debian (https://packages.debian.org/) удобно
распределяет пакеты по приблизительно тридцати ”разделам” архива Debian.

________________________________________________________________________________

	Как установить окружение разработчика для сборки пакетов?

Если вы хотите собирать пакеты в системе Debian, то вам нужно иметь минимальное
окружение для разработки, включающее компилятор C/C++ и несколько других важных
пакетов. Чтобы получить такое окружение, вам нужно просто установить 
build-essential. Это метапакет, в зависимости которого включены стандартные
инструменты разработки, необходимые для сборки пакетов Debian.
Однако, для пересборки некоторых программ может потребоваться дополнительное
программное обеспечение, в том числе заголовочные файлы библиотек или
дополнительные инструменты, такие как, например, autoconf или gettext. Debian
предоставляет множество инструментов, необходимых для упаковки другого ПО в
пакеты Debian.
Иногда бывает довольно сложно выяснить, какие именно программы требуются для
сборки, если вы, конечно, не планируете просто пересобирать пакеты Debian
Последнюю задачу решить довольно легко, так как в каждый официальный пакет
должен включаться список дополнительного программного обеспечения (кроме
пакетов из build-essential), необходимого для его сборки, то есть так
называемые сборочные зависимости (Build-Dependencies). Для установки всех
пакетов, необходимых для сборки определённого пакета исходного кода, и затем
собственно для сборки этого пакета достаточно запустить:
# apt-get build-dep foo
# apt-get source --build foo

________________________________________________________________________________

	Как я могу проверить, что я использую систему Debian, и какая это версия?

Для того, чтобы убедиться, что ваша система была установлена с настоящих
базовых дисков Debian, используйте команду
lsb_release -a
Она выведет название дистрибутива (в поле Distributor ID) и версию системы
(в полях Release и Codename). Ниже приведён пример запуска этой команды в
системе Debian:

$ lsb_release -a
No LSB modules are available.
Distributor ID: Debian
Description: Debian GNU/Linux 7.4 (wheezy)
Release: 7.4
Codename: wheezy

Также можно проверить наличие файла /etc/debian_version, который содержит
однострочную запись с указанием номера версии выпуска, файл поставляется в
пакете base-files.
Однако пользователи должны понимать, что система Debian состоит из многих
частей, каждая из которых может обновляться (почти) независимо от других.
Каждый «выпуск» Debian содержит строго определённое и неизменяемое содержимое.
Обновления доступны отдельно.
Чтобы получить состояние установки пакета foo,используйте команду:
dpkg --list foo.
Чтобы посмотреть версии установленных пакетов, запустите команду:
dpkg --status foo
Для просмотра версий всех установленных пакетов, выполните команду:
dpkg -l


________________________________________________________________________________

	FTP-архивы Debian

________________________________________________________________________________

	Что содержится в каталоге stable?

• stable/main/: В этом каталоге находятся пакеты, официально составляющие
последний выпуск системы Debian GNU/Linux.

• stable/non-free/: В этом каталоге находятся пакеты, распространение которых
ограничено требованиями, указанными в их лицензии.
Например, в лицензиях некоторых пакетов запрещается их коммерческое
распространение.
Другие пакеты могут распространяться третьими лицами, но только как
условно-бесплатное и несвободное ПО. Перед включением таких пакетов в какие бы
то ни было дистрибутивы для дальнейшего распространения (например, на CD-диски)
требуется изучение и, возможно, обсуждение лицензии каждого из них.

• stable/contrib/: В этом каталоге находятся пакеты, которые свободны в полном
соответствии с DFSG и сами по себе распространяются свободно, но каким-либо
образом зависят от НЕсвободных пакетов, доступных только в разделе non-free.

________________________________________________________________________________

	Что содержат каталоги в FTP-архивах Debian?

На каждом сервере-зеркале Debian всё ПО, которое было упаковано для Debian
GNU/Linux, распределено по нескольким каталогам.

Каталог dists — это сокращённое название «distributions» (дистрибутивы); это
канонический путь доступа к имеющимся на данный момент выпускам Debian
(и предварительным выпускам).

В каталоге pool содержатся собственно пакеты.

Есть несколько вспомогательных каталогов:
	/tools/: Утилиты DOS для создания загрузочных дискет, разметки жёсткого
диска, сжатия/распаковки файлов и загрузки Linux.
	/doc/: Основная документация Debian, например ЧаВо по Debian, инструкции
по отправке сообщений об ошибках и т. д.
	/indices/: Различные индексные файлы (файл Maintainers и файлы
переназначений).
	/project/: В основном, материалы для разработчиков и некоторые другие файлы.

________________________________________________________________________________

	Где находятся исходные коды?

Исходные коды в Debian есть для каждого пакета. Более того, в лицензиях
большинства программ содержатся требования распространять вместе с ними и их
исходные коды, либо сопровождать их предложением о том, откуда их можно
получить.
Исходные коды находятся в каталоге pool вместе со всеми зависящими от
архитектуры каталогами двоичных файлов. Для получения исходного кода
необязательно знать структуру FTP-архива, достаточно выполнить команду:
apt-get source имя_пакета.


________________________________________________________________________________

	Основы системы управления пакетами Debian

________________________________________________________________________________

Вкратце рассматривается внутренняя низкоуровневая организация системы
управления пакетами Debian.

________________________________________________________________________________

	Что такое пакет Debian?

Пакет обычно содержит полный комплект файлов, необходимых для реализации
определённого набора команд или возможностей.

Существует два типа пакетов Debian:
• Двоичные пакеты, которые содержат исполняемые файлы, файлы конфигурации,
страницы руководства/информации, информацию об авторских правах и другую
документацию. Эти пакеты распространяются в формате архива, специфичном для
Debian, они обычно характеризуются расширением файла". deb".
Двоичные пакеты можно распаковать с помощью утилиты Debian dpkg (возможно,
через интерфейс, такой как aptitude); 
• Исходные пакеты, которые состоят из файла .dsc, описывающего исходный пакет
(включая имена из следующих файлов), a .orig.tar.gz файл, содержащий исходный
немодифицированный исходный код в сжатом формате tar gzip и обычно a .diff.gz
файл, содержащий изменения в исходном источнике, относящиеся к Debian. Утилита
dpkg-source упаковывает и распаковывает исходные архивы Debian; подробная
информация приведена на странице руководства.
(Программа apt-get может использоваться в качестве интерфейса для dpkg-source.)

________________________________________________________________________________

	Что такое Пакет первой необходимости (Essential), Необходимый (Required),
	Важный (Important), Стандартный (Standard), Необязательный (Optional)
	или Дополнительный (Extra) пакет?

Для поддержки системы управления пакетами каждому пакету в Debian
сопровождающими дистрибутива назначается приоритет. Возможные приоритеты:

• Необходимые (Required) — пакеты, необходимые для правильного функционирования
системы.
Сюда входят все инструменты, необходимые для устранения неполадок в системе.
Вам не следует удалять эти пакеты, иначе ваша система может перестать работать,
и не исключено, что вы даже не сможете использовать dpkg для того, чтобы
вернуть всё назад. Функциональность системы, в которой установлены только
Необходимые пакеты, не слишком высока, но достаточна для того, чтобы позволить
системному администратору загрузить её и установить больше программного
обеспечения.

• Важные (Important) — пакеты, которые должны быть в любой Unix-системе.

• Стандартные пакеты являются стандартными в любой системе Linux, включая
достаточно небольшую, но не слишком ограниченную систему символьного режима.
Включены инструменты для отправки электронной почты (с помощью mutt) и загрузки
файлов с FTP-серверов.
Это то, что будет установлено по умолчанию, если пользователи не выберут
ничего другого. Он не включает в себя много крупных приложений, но включает
интерпретатор Python и некоторые серверные программы, такие как OpenSSH (для
удаленного администрирования) и Exim (для доставки почты, хотя его можно
настроить только для местной доставки). Он также включает в себя некоторые
общие общие документы, которые большинство пользователей сочтут полезными.

• Дополнительные пакеты включают все те, которые вы могли бы разумно захотеть
установить, если вы не знаете, что это такое, или которые не имеют специальных
требований.

• Дополнительные (Extra) — пакеты, либо конфликтующие с другими пакетами,
имеющими более высокий приоритет, полезные, скорее всего, только в том случае,
когда вы уже знаете, что это такое, либо имеющие специфические требования,
из-за которых им нельзя дать приоритет «Необязательный».

________________________________________________________________________________

	Инструменты управления пакетами Debian
________________________________________________________________________________

В Debian для управления пакетами имеется множество средств, от программ с
графическими или текстовыми интерфейсами, до низкоуровневых утилит установки
пакетов. Корректная работа всех доступных инструментов зависит от низкоуровневы
утилит, и все они представлены здесь в порядке уменьшения уровня сложности.
Важно понимать, что высокоуровневые инструменты управления пакетами, такие как
aptitude или synaptic, для управления пакетами используют apt, который, в свою
очередь, использует dpkg для управления пакетами системы.	

________________________________________________________________________________

	dpkg

Это основная программа управления пакетами. dpkg может вызываться с многими
параметрами.
Наиболее часто используемые из них:
• Показать список всех параметров: dpkg --help
• Показать управляющий файл (и другую информацию) для указанного пакета:
dpkg --info foo_VVV-RRR.deb
• Установить пакет на жёсткий диск (т. е. распаковать и настроить):
dpkg --install foo_VVV-RRR.deb
• Распаковать архив Debian на жёсткий диск (но не настраивать):
dpkg --unpack foo_VVV-RRR.deb.
Учтите, что в результате данной операции пакет не обязан быть в рабочем
состоянии; для правильной работы может потребоваться внесение изменений в
некоторые файлы. Данная команда удаляет любую ранее установленную версию
программы и запускает сценарий preinst указанного пакета 
• Настроить пакет, который был распакован ранее:
dpkg --configure foo.
Кроме всего прочего, эта команда запускает сценарий postinst указанного пакета
Она также обновляет файлы, перечисленные в conffiles. Обратите внимание, что в
качестве аргумента для параметра configure указывается имя пакета (т. е. foo),
а не имя файла-архива Debian (т. е. foo_VVV-RRR.deb).
• Распаковать файл с именем ”blurf” (или группу файлов с именем ”blurf*”) из
архива Debian:
dpkg --fsys-tarfile foo_VVV-RRR.deb | tar -xf - ’blurf*’
• Удалить пакет (но не его файлы настроек):
dpkg --remove foo
• Удалить пакет (вместе с файлами настроек):
dpkg --purge foo
• Вывести состояние установки пакетов, содержащих в имени строку (или
регулярное выражение) «foo*»:
dpkg --list ’foo*’

________________________________________________________________________________

	APT

APT is the Advanced Package Tool, расширенный интерфейс системы упаковки
Debian, предоставляющий программу apt-get. Он предоставляет инструменты
командной строки для поиска и управления пакетами, а также для запроса
информации о них, а также низкоуровневый доступ ко всем функциям библиотеки
libapt-pkg. 

Инструмент apt совмещает функциональность apt-get и apt-cache, а также по
умолчанию использует красивый цветной формат вывода, что очень удобно.
Для использования в сценариях или для продвинутого использования
предпочтительнее использовать apt-get (а иногда он просто необходим).

Часто используемые команды apt-get:
• To update the list of packages known by your system, you can run:
apt update
(вы должны регулярно запускать эту команду для обновления списка пакетов)
• Установить пакет foo и все его зависимости:
apt install foo
• Удалить пакет из системы:
apt remove foo
• Удалить из системы пакет и все его файлы настроек:
apt source имя_пакета
• To list all packages for which newer versions are available, run:
apt dist-upgrade
• Обновить все пакеты в системе (без установки дополнительных пакетов или
удаления пакетов):
apt upgrade
• Обновить все установленные в системе пакеты с установкой или удалением
дополнительных пакетов, если это потребуется для обновления какого-то пакета:
apt full-upgrade
(Команда upgrade оставит старую установленную версию пакета, если для
разрешения новых зависимостей при обновлении потребуется установка
дополнительных пакетов. Команда full-upgrade менее консервативна.)

Обратите внимание, что для выполнения любых команд, изменяющих пакеты, вы
должны войти в систему как пользователь root.
Обратите внимание, что apt-get теперь также устанавливает рекомендуемые пакеты
по умолчанию, и благодаря своей надежности это предпочтительная программа для
управления пакетами с консоли для выполнения установки системы и основных
обновлений системы.

В комплект инструментов apt входит также программа для обработки запросов по
списку пакетов apt-cache. Её можно использовать для поиска пакетов, имеющих
определённую функциональность, с помощью простых текстовых запросов или
регулярных выражений, а также для получения списка зависимостей из системы
управления пакетами. Часто используемые команды apt-cache:
• Найти пакеты, содержащие в своём описании слово:
apt search слово
• Показать подробную информацию о пакете:
apt show пакет
• Показать зависимости пакета:
apt-cache depends пакет
• To print detailed information on the versions available for a package and the
packages that reversedepends on it:
apt-cache showpkg пакет

________________________________________________________________________________

	aptitude

aptitude — это менеджер пакетов для систем Debian GNU/Linux, он предоставляет
интерфейс к инфраструктуре управления пакетами apt. aptitude представляет
собой текстовый интерфейс на основе библиотеки curses. Действия можно
выполнять как из визуального интерфейса, так и из командной строки.
aptitude может использоваться для лёгкого и быстрого выполнения задач по
управлению пакетами. Она позволяет пользователю просматривать список пакетов и
выполнять такие задачи по управлению пакетами как установка, обновление и
удаление.
Помимо функциональности apt-get, aptitude имеет много других дополнительных
возможностей:
• обеспечивает лёгкий доступ ко всем версиям пакета;
• позволяет легко отслеживать устаревшее ПО, занося его в «список устаревших
пакетов ипакетов, созданных локально»;
• включает достаточно мощную систему поиска и ограничения отображаемых пакетов.
Пользователи, знакомые с mutt, освоятся быстро, так как синтаксис регулярных
выражений был навеян этой программой;
• можно использовать для установки заранее сформированных наборов для
определённых задач.
• aptitude в полноэкранном режиме имеет встроенную функциональность su и может
запускаться обычным пользователем. Он вызовет su (и запросит пароль root, если
таковой имеется), когда вам действительно понадобятся права администратора.

С aptitude можно работать, используя визуальный интерфейс (просто запустить
aptitude), или непосредственно из командной строки. Используемый синтаксис
командной строки очень похож на синтаксис apt-get. Например, для установки
пакета foo, можно выполнить
aptitude install foo.

Обратите внимание, что aptitude является предпочтительной программой для
ежедневного управления пакетами с консоли.
Для получения дополнительной информации прочтите страницу руководства
aptitude(8) и установите пакет aptitude-doc.

________________________________________________________________________________

	synaptic

synaptic-это графический менеджер пакетов. Это позволяет вам устанавливать,
обновлять и удалять пакеты программного обеспечения удобным для пользователя
способом. Наряду с большинством функций, предлагаемых aptitude, он также имеет
функцию редактирования списка используемых репозиториев и поддерживает просмотр
всей доступной документации, связанной с пакетом.

________________________________________________________________________________

	dpkg-deb

This program manipulates Debian archive (.deb) files. Some common uses are:
• Вывести список допустимых параметров: dpkg-deb --help
• Определить, какие файлы содержатся в файле-архиве Debian:
dpkg-deb --contents foo_VVV-RRR.deb)
• Извлечь файлы из указанного архива Debian в определённый пользователем каталог:
dpkg-deb --extract foo_VVV-RRR.deb tmp 
извлечёт все файлы из foo_VVV-RRR.deb в каталог tmp/. Это удобно для просмотра
содержимого пакета в отдельном каталоге без его установки в основное дерево
каталогов.
• Извлечь из пакета файлы с управляющей информацией:
dpkg-deb --control foo_VVV-RRR.deb tmp.
Учтите, что любые пакеты, просто распакованные командой dpkg-deb --extract, будут
установлены некорректно, для установки следует использовать dpkg --install.

________________________________________________________________________________


